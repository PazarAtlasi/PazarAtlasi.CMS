// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PazarAtlasi.CMS.Persistence.Context;

#nullable disable

namespace PazarAtlasi.CMS.Persistence.Migrations
{
    [DbContext(typeof(PazarAtlasiDbContext))]
    [Migration("20251014191534_hg")]
    partial class hg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("RelatedDataId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedDataId");

                    b.Property<int>("RelatedEntityId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedEntityId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Contents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ana sayfa içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazısı içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 9,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün detay sayfası içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Languages_Code")
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("IsDefault")
                        .HasDatabaseName("IX_Languages_IsDefault");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TR",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = true,
                            IsDeleted = false,
                            Name = "Türkçe",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "English",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "DE",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Deutsch",
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Layout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDefault");

                    b.HasIndex("Name");

                    b.HasIndex("Status", "IsDeleted");

                    b.ToTable("Layouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Standard layout with header, main content, and footer",
                            IsDefault = true,
                            IsDeleted = false,
                            Name = "Default Layout",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hero-focused layout for landing pages",
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Landing Page Layout",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Content-focused layout with sidebar for blog posts",
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Blog Layout",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Clean minimal layout with just content area",
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Minimal Layout",
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.LayoutSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("LayoutId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("LayoutId", "SectionId")
                        .IsUnique();

                    b.HasIndex("Status", "IsDeleted");

                    b.HasIndex("LayoutId", "Position", "SortOrder");

                    b.ToTable("LayoutSections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 1,
                            Position = "header",
                            SectionId = 1,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 1,
                            Position = "content",
                            SectionId = 2,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 1,
                            Position = "footer",
                            SectionId = 3,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 2,
                            Position = "header",
                            SectionId = 1,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 2,
                            Position = "content",
                            SectionId = 4,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = false,
                            LayoutId = 2,
                            Position = "content",
                            SectionId = 2,
                            SortOrder = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            IsRequired = true,
                            LayoutId = 2,
                            Position = "footer",
                            SectionId = 3,
                            SortOrder = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Code");

                    b.Property<int?>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("ContentId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("LayoutId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int?>("PageSEOParameterId")
                        .HasColumnType("int")
                        .HasColumnName("PageSEOParameterId");

                    b.Property<int>("PageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("PageType");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Pages_Code")
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("ContentId");

                    b.HasIndex("LayoutId");

                    b.HasIndex("PageType")
                        .HasDatabaseName("IX_Pages_PageType");

                    b.ToTable("Pages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "home",
                            ContentId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfası",
                            IsDeleted = false,
                            Name = "Ana Sayfa",
                            PageType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "blog",
                            ContentId = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazıları sayfası",
                            IsDeleted = false,
                            Name = "Blog",
                            PageType = 8,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "products",
                            ContentId = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün katalog sayfası",
                            IsDeleted = false,
                            Name = "Ürünler",
                            PageType = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "about",
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Şirket hakkında bilgi sayfası",
                            IsDeleted = false,
                            Name = "Hakkımızda",
                            PageType = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "contact",
                            CreatedAt = new DateTime(2024, 1, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "İletişim bilgileri ve form sayfası",
                            IsDeleted = false,
                            Name = "İletişim",
                            PageType = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Author");

                    b.Property<string>("CanonicalURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CanonicalURL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MetaTitle");

                    b.Property<int>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("SubDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SubDescription");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PageId")
                        .IsUnique()
                        .HasDatabaseName("IX_PageSEOParameters_PageId");

                    b.ToTable("PageSEOParameters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası CMS ana sayfası. Modern ve kullanıcı dostu içerik yönetim sistemi.",
                            MetaKeywords = "cms, içerik yönetimi, pazar atlası, web sitesi",
                            MetaTitle = "Ana Sayfa - Pazar Atlası CMS",
                            PageId = 1,
                            Status = 1,
                            Title = "Ana Sayfa"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/blog",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası blog yazıları. Teknoloji, pazarlama ve iş dünyasından güncel haberler.",
                            MetaKeywords = "blog, yazılar, teknoloji, pazarlama, iş",
                            MetaTitle = "Blog - Pazar Atlası CMS",
                            PageId = 2,
                            Status = 1,
                            Title = "Blog"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/products",
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün katalog sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası ürün kataloğu. Kaliteli ve uygun fiyatlı ürünler.",
                            MetaKeywords = "ürünler, katalog, alışveriş, kalite",
                            MetaTitle = "Ürünler - Pazar Atlası CMS",
                            PageId = 3,
                            Status = 1,
                            Title = "Ürünler"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<int>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_PageTranslations_PageId_LanguageId");

                    b.ToTable("PageTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 1,
                            Status = 1,
                            Value = "Ana Sayfa"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 1,
                            Status = 1,
                            Value = "Home Page"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 2,
                            Status = 1,
                            Value = "Blog"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 2,
                            Status = 1,
                            Value = "Blog"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 3,
                            Status = 1,
                            Value = "Ürünler"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 3,
                            Status = 1,
                            Value = "Products"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 4,
                            Status = 1,
                            Value = "Hakkımızda"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 4,
                            Status = 1,
                            Value = "About Us"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attributes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Attributes");

                    b.Property<string>("Configure")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Configure");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("SortOrder");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_Sections_Type");

                    b.HasIndex("PageId", "SortOrder")
                        .HasDatabaseName("IX_Sections_PageId_SortOrder");

                    b.ToTable("Sections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attributes = "{\"backgroundImage\": \"hero-bg.jpg\", \"height\": \"500px\"}",
                            Configure = "{\"showButton\": true, \"buttonText\": \"Keşfet\"}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SortOrder = 1,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 2,
                            Attributes = "{\"columns\": 3}",
                            Configure = "{\"maxItems\": 6, \"showMore\": true, \"showPrices\": true}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SortOrder = 2,
                            Status = 1,
                            Type = 6
                        },
                        new
                        {
                            Id = 3,
                            Attributes = "{\"backgroundColor\": \"#f8f9fa\"}",
                            Configure = "{\"showPrivacyText\": true}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SortOrder = 3,
                            Status = 1,
                            Type = 7
                        },
                        new
                        {
                            Id = 4,
                            Attributes = "{}",
                            Configure = "{\"showSearchBox\": true,\"showBreadcrumbs\": true}",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 2,
                            SortOrder = 1,
                            Status = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Attributes = "{}",
                            Configure = "{\"showExcerpt\": true, \"showAuthor\": true, \"showDate\": true,\"postsPerPage\": 10}",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 2,
                            SortOrder = 2,
                            Status = 1,
                            Type = 12
                        },
                        new
                        {
                            Id = 6,
                            Attributes = "{\"columns\": 4}",
                            Configure = "{\"productsPerPage\": 20, \"showSorting\": true, \"showFilters\": true}",
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 3,
                            SortOrder = 1,
                            Status = 1,
                            Type = 4
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("LinkedPageId")
                        .HasColumnType("int");

                    b.Property<string>("MediaAttributes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MediaAttributes");

                    b.Property<int>("MediaType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("MediaType");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PictureUrl");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("RedirectUrl");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionId");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("SortOrder");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_SectionItems_Type");

                    b.HasIndex("SectionId", "SortOrder")
                        .HasDatabaseName("IX_SectionItems_SectionId_SortOrder");

                    b.ToTable("SectionItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 1,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 1,
                            SortOrder = 2,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            RedirectUrl = "/products",
                            SectionId = 1,
                            SortOrder = 3,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product1.jpg",
                            RedirectUrl = "/products/1",
                            SectionId = 2,
                            SortOrder = 1,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product2.jpg",
                            RedirectUrl = "/products/2",
                            SectionId = 2,
                            SortOrder = 2,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product3.jpg",
                            RedirectUrl = "/products/3",
                            SectionId = 2,
                            SortOrder = 3,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 3,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 3,
                            SortOrder = 2,
                            Status = 1,
                            Type = 13
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 4,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 4,
                            SortOrder = 2,
                            Status = 1,
                            Type = 18
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItemTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("SectionItemId")
                        .HasColumnType("int")
                        .HasColumnName("SectionItemId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SectionItemId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_SectionItemTranslations_SectionItemId_LanguageId");

                    b.ToTable("SectionItemTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "En kaliteli ürünleri keşfedin",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Hoş Geldiniz",
                            SectionItemId = 1,
                            Status = 1,
                            Title = "Pazar Atlası'na Hoş Geldiniz"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discover the highest quality products",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Welcome",
                            SectionItemId = 1,
                            Status = 1,
                            Title = "Welcome to Pazar Atlası"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Binlerce ürün arasından size en uygun olanları bulun. Hızlı teslimat, güvenli ödeme ve mükemmel müşteri hizmetiyle yanınızdayız.",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Alt Başlık",
                            SectionItemId = 2,
                            Status = 1,
                            Title = "Kalite ve Güvenin Adresi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Find the most suitable products for you among thousands of products. We are with you with fast delivery, secure payment and excellent customer service.",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Subtitle",
                            SectionItemId = 2,
                            Status = 1,
                            Title = "Address of Quality and Trust"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tüm ürünleri görüntülemek için tıklayın",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Keşfet",
                            SectionItemId = 3,
                            Status = 1,
                            Title = "Ürünleri Keşfet"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Click to view all products",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Explore",
                            SectionItemId = 3,
                            Status = 1,
                            Title = "Explore Products"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yüksek performanslı, şık tasarımlı laptop",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Öne Çıkan Ürün 1",
                            SectionItemId = 4,
                            Status = 1,
                            Title = "Premium Laptop"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High performance, stylish design laptop",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Featured Product 1",
                            SectionItemId = 4,
                            Status = 1,
                            Title = "Premium Laptop"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yeni ürünler ve kampanyalardan haberdar olmak için e-posta listemize katılın",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Bülten",
                            SectionItemId = 7,
                            Status = 1,
                            Title = "Haberdar Olun"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Join our email list to stay informed about new products and campaigns",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Newsletter",
                            SectionItemId = 7,
                            Status = 1,
                            Title = "Stay Informed"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "En güncel haberler ve makaleler",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog",
                            SectionItemId = 9,
                            Status = 1,
                            Title = "Blog Yazıları"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest news and articles",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog",
                            SectionItemId = 9,
                            Status = 1,
                            Title = "Blog Posts"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("SectionId", "TemplateId")
                        .IsUnique();

                    b.ToTable("SectionTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            SectionId = 1,
                            Status = 1,
                            TemplateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            SectionId = 1,
                            Status = 1,
                            TemplateId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            SectionId = 1,
                            Status = 1,
                            TemplateId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            SectionId = 1,
                            Status = 1,
                            TemplateId = 4
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SectionId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_SectionTranslations_SectionId_LanguageId");

                    b.ToTable("SectionTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfasındaki büyük banner alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Ana Banner",
                            SectionId = 1,
                            Status = 1,
                            Title = "Ana Sayfa Hero Bölümü"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Large banner area on the homepage of the website",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Main Banner",
                            SectionId = 1,
                            Status = 1,
                            Title = "Homepage Hero Section"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Seçili ve popüler ürünlerin sergilendiği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Öne Çıkan Ürünler",
                            SectionId = 2,
                            Status = 1,
                            Title = "Öne Çıkan Ürünler Bölümü"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where selected and popular products are displayed",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Featured Products",
                            SectionId = 2,
                            Status = 1,
                            Title = "Featured Products Section"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kullanıcıların e-posta listesine kaydolabileceği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "E-posta Bülteni",
                            SectionId = 3,
                            Status = 1,
                            Title = "E-posta Bülteni Kayıt Bölümü"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where users can register to the email list",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Email Newsletter",
                            SectionId = 3,
                            Status = 1,
                            Title = "Email Newsletter Registration Section"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog sayfasının üst kısmındaki başlık alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog Başlığı",
                            SectionId = 4,
                            Status = 1,
                            Title = "Blog Sayfa Başlığı"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Header area at the top of the blog page",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog Header",
                            SectionId = 4,
                            Status = 1,
                            Title = "Blog Page Header"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazılarının listelendiği ana içerik alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog İçeriği",
                            SectionId = 5,
                            Status = 1,
                            Title = "Blog Yazıları Listesi"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Main content area where blog posts are listed",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog Content",
                            SectionId = 5,
                            Status = 1,
                            Title = "Blog Posts List"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tüm ürünlerin kategorize edilmiş şekilde listelendiği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Ürün Kataloğu",
                            SectionId = 6,
                            Status = 1,
                            Title = "Ürün Katalog Listesi"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where all products are listed in a categorized manner",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Product Catalog",
                            SectionId = 6,
                            Status = 1,
                            Title = "Product Catalog List"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigurationSchema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PreviewImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TemplateKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateKey")
                        .IsUnique();

                    b.HasIndex("TemplateType", "IsActive");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"backgroundColor\":{\"type\":\"string\",\"default\":\"#ffffff\"},\"textColor\":{\"type\":\"string\",\"default\":\"#333333\"},\"showLogo\":{\"type\":\"boolean\",\"default\":true},\"logoPosition\":{\"type\":\"string\",\"enum\":[\"left\",\"center\",\"right\"],\"default\":\"left\"}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A simple horizontal navigation bar with basic menu items",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Simple Navbar",
                            PreviewImageUrl = "/images/templates/navbar-simple.png",
                            SortOrder = 1,
                            Status = 0,
                            TemplateKey = "navbar-simple",
                            TemplateType = 1
                        },
                        new
                        {
                            Id = 2,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"backgroundColor\":{\"type\":\"string\",\"default\":\"#1a1a1a\"},\"textColor\":{\"type\":\"string\",\"default\":\"#ffffff\"},\"showLogo\":{\"type\":\"boolean\",\"default\":true},\"logoPosition\":{\"type\":\"string\",\"enum\":[\"left\",\"center\",\"right\"],\"default\":\"left\"},\"megaMenuColumns\":{\"type\":\"integer\",\"minimum\":2,\"maximum\":4,\"default\":3},\"showDescriptions\":{\"type\":\"boolean\",\"default\":true},\"showImages\":{\"type\":\"boolean\",\"default\":true}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Advanced navbar with dropdown mega menus and rich content",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mega Menu Navbar",
                            PreviewImageUrl = "/images/templates/navbar-megamenu.png",
                            SortOrder = 2,
                            Status = 0,
                            TemplateKey = "navbar-megamenu",
                            TemplateType = 11
                        },
                        new
                        {
                            Id = 3,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"backgroundColor\":{\"type\":\"string\",\"default\":\"#2d3748\"},\"textColor\":{\"type\":\"string\",\"default\":\"#ffffff\"},\"showLogo\":{\"type\":\"boolean\",\"default\":true},\"logoPosition\":{\"type\":\"string\",\"enum\":[\"left\",\"center\",\"right\"],\"default\":\"left\"},\"tabStyle\":{\"type\":\"string\",\"enum\":[\"pills\",\"underline\",\"background\"],\"default\":\"pills\"},\"showIcons\":{\"type\":\"boolean\",\"default\":true},\"animationDuration\":{\"type\":\"integer\",\"minimum\":100,\"maximum\":1000,\"default\":300}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Navbar with tabbed service navigation and interactive content",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Service Tabs Navbar",
                            PreviewImageUrl = "/images/templates/navbar-servicetabs.png",
                            SortOrder = 3,
                            Status = 0,
                            TemplateKey = "navbar-servicetabs",
                            TemplateType = 10
                        },
                        new
                        {
                            Id = 4,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"backgroundColor\":{\"type\":\"string\",\"default\":\"#4a5568\"},\"textColor\":{\"type\":\"string\",\"default\":\"#ffffff\"},\"showLogo\":{\"type\":\"boolean\",\"default\":true},\"logoPosition\":{\"type\":\"string\",\"enum\":[\"left\",\"center\",\"right\"],\"default\":\"left\"},\"categoryStyle\":{\"type\":\"string\",\"enum\":[\"sidebar\",\"dropdown\",\"tabs\"],\"default\":\"sidebar\"},\"showCategoryIcons\":{\"type\":\"boolean\",\"default\":true},\"itemsPerCategory\":{\"type\":\"integer\",\"minimum\":2,\"maximum\":8,\"default\":4}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Navbar with categorized menu items and filtered content display",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Categorized Navbar",
                            PreviewImageUrl = "/images/templates/navbar-categorized.png",
                            SortOrder = 4,
                            Status = 0,
                            TemplateKey = "navbar-categorized",
                            TemplateType = 6
                        },
                        new
                        {
                            Id = 5,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"backgroundColor\":{\"type\":\"string\",\"default\":\"#ffffff\"},\"textColor\":{\"type\":\"string\",\"default\":\"#333333\"},\"padding\":{\"type\":\"string\",\"enum\":[\"small\",\"medium\",\"large\"],\"default\":\"medium\"}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Standard template for any section type",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Default Template",
                            PreviewImageUrl = "/images/templates/default.png",
                            SortOrder = 5,
                            Status = 0,
                            TemplateKey = "default",
                            TemplateType = 1
                        },
                        new
                        {
                            Id = 6,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"direction\":{\"type\":\"string\",\"enum\":[\"horizontal\",\"vertical\"],\"default\":\"vertical\"},\"spacing\":{\"type\":\"string\",\"enum\":[\"small\",\"medium\",\"large\"],\"default\":\"medium\"},\"showNumbers\":{\"type\":\"boolean\",\"default\":false}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Items displayed in sequential order",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sequential Layout",
                            PreviewImageUrl = "/images/templates/sequential.png",
                            SortOrder = 6,
                            Status = 0,
                            TemplateKey = "sequential",
                            TemplateType = 2
                        },
                        new
                        {
                            Id = 7,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"columns\":{\"type\":\"integer\",\"minimum\":1,\"maximum\":6,\"default\":3},\"gap\":{\"type\":\"string\",\"enum\":[\"small\",\"medium\",\"large\"],\"default\":\"medium\"},\"showImages\":{\"type\":\"boolean\",\"default\":true},\"showExcerpts\":{\"type\":\"boolean\",\"default\":true}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Content displayed in a responsive grid layout",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Grid Layout",
                            PreviewImageUrl = "/images/templates/grid.png",
                            SortOrder = 7,
                            Status = 0,
                            TemplateKey = "grid",
                            TemplateType = 3
                        },
                        new
                        {
                            Id = 8,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"columns\":{\"type\":\"integer\",\"minimum\":2,\"maximum\":5,\"default\":3},\"gap\":{\"type\":\"string\",\"enum\":[\"small\",\"medium\",\"large\"],\"default\":\"medium\"},\"showImages\":{\"type\":\"boolean\",\"default\":true},\"imageAspectRatio\":{\"type\":\"string\",\"enum\":[\"auto\",\"square\",\"landscape\",\"portrait\"],\"default\":\"auto\"}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pinterest-style masonry layout for varied content sizes",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Masonry Layout",
                            PreviewImageUrl = "/images/templates/masonry.png",
                            SortOrder = 8,
                            Status = 0,
                            TemplateKey = "masonry",
                            TemplateType = 4
                        },
                        new
                        {
                            Id = 9,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"autoPlay\":{\"type\":\"boolean\",\"default\":true},\"interval\":{\"type\":\"integer\",\"minimum\":2000,\"maximum\":10000,\"default\":5000},\"showIndicators\":{\"type\":\"boolean\",\"default\":true},\"showArrows\":{\"type\":\"boolean\",\"default\":true},\"transitionEffect\":{\"type\":\"string\",\"enum\":[\"fade\",\"slide\",\"zoom\"],\"default\":\"slide\"}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sliding carousel with navigation controls",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Carousel",
                            PreviewImageUrl = "/images/templates/carousel.png",
                            SortOrder = 9,
                            Status = 0,
                            TemplateKey = "carousel",
                            TemplateType = 5
                        },
                        new
                        {
                            Id = 10,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"showIcons\":{\"type\":\"boolean\",\"default\":true},\"iconPosition\":{\"type\":\"string\",\"enum\":[\"left\",\"right\"],\"default\":\"left\"},\"spacing\":{\"type\":\"string\",\"enum\":[\"compact\",\"comfortable\",\"spacious\"],\"default\":\"comfortable\"},\"showDividers\":{\"type\":\"boolean\",\"default\":false}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simple list layout with optional icons",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "List Layout",
                            PreviewImageUrl = "/images/templates/list.png",
                            SortOrder = 10,
                            Status = 0,
                            TemplateKey = "list",
                            TemplateType = 6
                        },
                        new
                        {
                            Id = 11,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"alignment\":{\"type\":\"string\",\"enum\":[\"left\",\"center\",\"right\"],\"default\":\"center\"},\"showImage\":{\"type\":\"boolean\",\"default\":true},\"imageSize\":{\"type\":\"string\",\"enum\":[\"small\",\"medium\",\"large\"],\"default\":\"medium\"},\"showDescription\":{\"type\":\"boolean\",\"default\":true}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Display single item with focus",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Single Item",
                            PreviewImageUrl = "/images/templates/single-item.png",
                            SortOrder = 11,
                            Status = 0,
                            TemplateKey = "single-item",
                            TemplateType = 7
                        },
                        new
                        {
                            Id = 12,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"itemsPerRow\":{\"type\":\"integer\",\"minimum\":2,\"maximum\":6,\"default\":3},\"showTitles\":{\"type\":\"boolean\",\"default\":true},\"showDescriptions\":{\"type\":\"boolean\",\"default\":true},\"equalHeight\":{\"type\":\"boolean\",\"default\":true}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Display multiple items in organized layout",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Multi Item",
                            PreviewImageUrl = "/images/templates/multi-item.png",
                            SortOrder = 12,
                            Status = 0,
                            TemplateKey = "multi-item",
                            TemplateType = 8
                        },
                        new
                        {
                            Id = 13,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"allowMultiple\":{\"type\":\"boolean\",\"default\":false},\"defaultOpen\":{\"type\":\"integer\",\"minimum\":0,\"default\":0},\"showIcons\":{\"type\":\"boolean\",\"default\":true},\"animationDuration\":{\"type\":\"integer\",\"minimum\":100,\"maximum\":1000,\"default\":300}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Collapsible accordion layout",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Accordion",
                            PreviewImageUrl = "/images/templates/accordion.png",
                            SortOrder = 13,
                            Status = 0,
                            TemplateKey = "accordion",
                            TemplateType = 9
                        },
                        new
                        {
                            Id = 14,
                            ConfigurationSchema = "{\"type\":\"object\",\"properties\":{\"tabPosition\":{\"type\":\"string\",\"enum\":[\"top\",\"bottom\",\"left\",\"right\"],\"default\":\"top\"},\"tabStyle\":{\"type\":\"string\",\"enum\":[\"pills\",\"underline\",\"background\"],\"default\":\"underline\"},\"showIcons\":{\"type\":\"boolean\",\"default\":false},\"defaultTab\":{\"type\":\"integer\",\"minimum\":0,\"default\":0}}}",
                            CreatedAt = new DateTime(2024, 10, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tabbed content layout",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tabs",
                            PreviewImageUrl = "/images/templates/tabs.png",
                            SortOrder = 14,
                            Status = 0,
                            TemplateKey = "tabs",
                            TemplateType = 10
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.LayoutSection", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Layout", "Layout")
                        .WithMany("LayoutSections")
                        .HasForeignKey("LayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Layout");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Content", "Content")
                        .WithMany("Pages")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Layout", "Layout")
                        .WithMany("Pages")
                        .HasForeignKey("LayoutId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Content");

                    b.Navigation("Layout");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithOne("PageSEOParameter")
                        .HasForeignKey("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", "PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithMany("PageTranslations")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithMany("Sections")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany("SectionItems")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItemTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", "SectionItem")
                        .WithMany("Translations")
                        .HasForeignKey("SectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SectionItem");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTemplate", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany("SectionTemplates")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Template", "Template")
                        .WithMany("SectionTemplates")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany("Translations")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Content", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Layout", b =>
                {
                    b.Navigation("LayoutSections");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.Navigation("PageSEOParameter")
                        .IsRequired();

                    b.Navigation("PageTranslations");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.Navigation("SectionItems");

                    b.Navigation("SectionTemplates");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Template", b =>
                {
                    b.Navigation("SectionTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
