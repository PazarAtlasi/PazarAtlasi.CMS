// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PazarAtlasi.CMS.Persistence.Context;

#nullable disable

namespace PazarAtlasi.CMS.Persistence.Migrations
{
    [DbContext(typeof(PazarAtlasiDbContext))]
    partial class PazarAtlasiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("RelatedDataId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedDataId");

                    b.Property<int>("RelatedEntityId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedEntityId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Contents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ana sayfa içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazısı içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 9,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün detay sayfası içeriği",
                            IsDeleted = false,
                            RelatedDataId = 1,
                            RelatedEntityId = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Languages_Code")
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("IsDefault")
                        .HasDatabaseName("IX_Languages_IsDefault");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TR",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = true,
                            IsDeleted = false,
                            Name = "Türkçe",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "English",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "DE",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Deutsch",
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Code");

                    b.Property<int?>("ContentId")
                        .HasColumnType("int")
                        .HasColumnName("ContentId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int?>("PageSEOParameterId")
                        .HasColumnType("int")
                        .HasColumnName("PageSEOParameterId");

                    b.Property<int>("PageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("PageType");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Pages_Code")
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("ContentId");

                    b.HasIndex("PageType")
                        .HasDatabaseName("IX_Pages_PageType");

                    b.ToTable("Pages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "home",
                            ContentId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfası",
                            IsDeleted = false,
                            Name = "Ana Sayfa",
                            PageType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "blog",
                            ContentId = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazıları sayfası",
                            IsDeleted = false,
                            Name = "Blog",
                            PageType = 8,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "products",
                            ContentId = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün katalog sayfası",
                            IsDeleted = false,
                            Name = "Ürünler",
                            PageType = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "about",
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Şirket hakkında bilgi sayfası",
                            IsDeleted = false,
                            Name = "Hakkımızda",
                            PageType = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "contact",
                            CreatedAt = new DateTime(2024, 1, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "İletişim bilgileri ve form sayfası",
                            IsDeleted = false,
                            Name = "İletişim",
                            PageType = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Author");

                    b.Property<string>("CanonicalURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CanonicalURL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MetaTitle");

                    b.Property<int>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("SubDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SubDescription");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("PageId")
                        .IsUnique()
                        .HasDatabaseName("IX_PageSEOParameters_PageId");

                    b.ToTable("PageSEOParameters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası CMS ana sayfası. Modern ve kullanıcı dostu içerik yönetim sistemi.",
                            MetaKeywords = "cms, içerik yönetimi, pazar atlası, web sitesi",
                            MetaTitle = "Ana Sayfa - Pazar Atlası CMS",
                            PageId = 1,
                            Status = 1,
                            Title = "Ana Sayfa"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/blog",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası blog yazıları. Teknoloji, pazarlama ve iş dünyasından güncel haberler.",
                            MetaKeywords = "blog, yazılar, teknoloji, pazarlama, iş",
                            MetaTitle = "Blog - Pazar Atlası CMS",
                            PageId = 2,
                            Status = 1,
                            Title = "Blog"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Pazar Atlası",
                            CanonicalURL = "https://www.pazaratlasi.com/products",
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ürün katalog sayfası için SEO parametreleri",
                            IsDeleted = false,
                            MetaDescription = "Pazar Atlası ürün kataloğu. Kaliteli ve uygun fiyatlı ürünler.",
                            MetaKeywords = "ürünler, katalog, alışveriş, kalite",
                            MetaTitle = "Ürünler - Pazar Atlası CMS",
                            PageId = 3,
                            Status = 1,
                            Title = "Ürünler"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<int>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_PageTranslations_PageId_LanguageId");

                    b.ToTable("PageTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 1,
                            Status = 1,
                            Value = "Ana Sayfa"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 1,
                            Status = 1,
                            Value = "Home Page"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 2,
                            Status = 1,
                            Value = "Blog"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 2,
                            Status = 1,
                            Value = "Blog"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 3,
                            Status = 1,
                            Value = "Ürünler"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 3,
                            Status = 1,
                            Value = "Products"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 1,
                            PageId = 4,
                            Status = 1,
                            Value = "Hakkımızda"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LanguageId = 2,
                            PageId = 4,
                            Status = 1,
                            Value = "About Us"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attributes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Attributes");

                    b.Property<string>("Configure")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Configure");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("PageId")
                        .HasColumnType("int")
                        .HasColumnName("PageId");

                    b.Property<int>("SectionTemplateType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("SectionTemplateType");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("SortOrder");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_Sections_Type");

                    b.HasIndex("PageId", "SortOrder")
                        .HasDatabaseName("IX_Sections_PageId_SortOrder");

                    b.ToTable("Sections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attributes = "{\"backgroundImage\": \"hero-bg.jpg\", \"height\": \"500px\"}",
                            Configure = "{\"showButton\": true, \"buttonText\": \"Keşfet\"}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SectionTemplateType = 1,
                            SortOrder = 1,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 2,
                            Attributes = "{\"columns\": 3}",
                            Configure = "{\"maxItems\": 6, \"showMore\": true, \"showPrices\": true}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SectionTemplateType = 3,
                            SortOrder = 2,
                            Status = 1,
                            Type = 6
                        },
                        new
                        {
                            Id = 3,
                            Attributes = "{\"backgroundColor\": \"#f8f9fa\"}",
                            Configure = "{\"showPrivacyText\": true}",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 1,
                            SectionTemplateType = 1,
                            SortOrder = 3,
                            Status = 1,
                            Type = 7
                        },
                        new
                        {
                            Id = 4,
                            Attributes = "{}",
                            Configure = "{\"showSearchBox\": true,\"showBreadcrumbs\": true}",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 2,
                            SectionTemplateType = 1,
                            SortOrder = 1,
                            Status = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Attributes = "{}",
                            Configure = "{\"showExcerpt\": true, \"showAuthor\": true, \"showDate\": true,\"postsPerPage\": 10}",
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 2,
                            SectionTemplateType = 6,
                            SortOrder = 2,
                            Status = 1,
                            Type = 12
                        },
                        new
                        {
                            Id = 6,
                            Attributes = "{\"columns\": 4}",
                            Configure = "{\"productsPerPage\": 20, \"showSorting\": true, \"showFilters\": true}",
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PageId = 3,
                            SectionTemplateType = 3,
                            SortOrder = 1,
                            Status = 1,
                            Type = 4
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MediaAttributes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MediaAttributes");

                    b.Property<int>("MediaType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("MediaType");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PictureUrl");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("RedirectUrl");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionId");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("SortOrder");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_SectionItems_Type");

                    b.HasIndex("SectionId", "SortOrder")
                        .HasDatabaseName("IX_SectionItems_SectionId_SortOrder");

                    b.ToTable("SectionItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 1,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 1,
                            SortOrder = 2,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            RedirectUrl = "/products",
                            SectionId = 1,
                            SortOrder = 3,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product1.jpg",
                            RedirectUrl = "/products/1",
                            SectionId = 2,
                            SortOrder = 1,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product2.jpg",
                            RedirectUrl = "/products/2",
                            SectionId = 2,
                            SortOrder = 2,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            PictureUrl = "/images/products/product3.jpg",
                            RedirectUrl = "/products/3",
                            SectionId = 2,
                            SortOrder = 3,
                            Status = 1,
                            Type = 9
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 3,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 3,
                            SortOrder = 2,
                            Status = 1,
                            Type = 13
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 4,
                            SortOrder = 1,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MediaType = 0,
                            SectionId = 4,
                            SortOrder = 2,
                            Status = 1,
                            Type = 18
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItemTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("SectionItemId")
                        .HasColumnType("int")
                        .HasColumnName("SectionItemId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SectionItemId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_SectionItemTranslations_SectionItemId_LanguageId");

                    b.ToTable("SectionItemTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "En kaliteli ürünleri keşfedin",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Hoş Geldiniz",
                            SectionItemId = 1,
                            Status = 1,
                            Title = "Pazar Atlası'na Hoş Geldiniz"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Discover the highest quality products",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Welcome",
                            SectionItemId = 1,
                            Status = 1,
                            Title = "Welcome to Pazar Atlası"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Binlerce ürün arasından size en uygun olanları bulun. Hızlı teslimat, güvenli ödeme ve mükemmel müşteri hizmetiyle yanınızdayız.",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Alt Başlık",
                            SectionItemId = 2,
                            Status = 1,
                            Title = "Kalite ve Güvenin Adresi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Find the most suitable products for you among thousands of products. We are with you with fast delivery, secure payment and excellent customer service.",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Subtitle",
                            SectionItemId = 2,
                            Status = 1,
                            Title = "Address of Quality and Trust"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tüm ürünleri görüntülemek için tıklayın",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Keşfet",
                            SectionItemId = 3,
                            Status = 1,
                            Title = "Ürünleri Keşfet"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Click to view all products",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Explore",
                            SectionItemId = 3,
                            Status = 1,
                            Title = "Explore Products"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yüksek performanslı, şık tasarımlı laptop",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Öne Çıkan Ürün 1",
                            SectionItemId = 4,
                            Status = 1,
                            Title = "Premium Laptop"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High performance, stylish design laptop",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Featured Product 1",
                            SectionItemId = 4,
                            Status = 1,
                            Title = "Premium Laptop"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yeni ürünler ve kampanyalardan haberdar olmak için e-posta listemize katılın",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Bülten",
                            SectionItemId = 7,
                            Status = 1,
                            Title = "Haberdar Olun"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Join our email list to stay informed about new products and campaigns",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Newsletter",
                            SectionItemId = 7,
                            Status = 1,
                            Title = "Stay Informed"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "En güncel haberler ve makaleler",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog",
                            SectionItemId = 9,
                            Status = 1,
                            Title = "Blog Yazıları"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest news and articles",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog",
                            SectionItemId = 9,
                            Status = 1,
                            Title = "Blog Posts"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SectionId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("IX_SectionTranslations_SectionId_LanguageId");

                    b.ToTable("SectionTranslations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Web sitesinin ana sayfasındaki büyük banner alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Ana Banner",
                            SectionId = 1,
                            Status = 1,
                            Title = "Ana Sayfa Hero Bölümü"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Large banner area on the homepage of the website",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Main Banner",
                            SectionId = 1,
                            Status = 1,
                            Title = "Homepage Hero Section"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Seçili ve popüler ürünlerin sergilendiği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Öne Çıkan Ürünler",
                            SectionId = 2,
                            Status = 1,
                            Title = "Öne Çıkan Ürünler Bölümü"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where selected and popular products are displayed",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Featured Products",
                            SectionId = 2,
                            Status = 1,
                            Title = "Featured Products Section"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kullanıcıların e-posta listesine kaydolabileceği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "E-posta Bülteni",
                            SectionId = 3,
                            Status = 1,
                            Title = "E-posta Bülteni Kayıt Bölümü"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where users can register to the email list",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Email Newsletter",
                            SectionId = 3,
                            Status = 1,
                            Title = "Email Newsletter Registration Section"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog sayfasının üst kısmındaki başlık alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog Başlığı",
                            SectionId = 4,
                            Status = 1,
                            Title = "Blog Sayfa Başlığı"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Header area at the top of the blog page",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog Header",
                            SectionId = 4,
                            Status = 1,
                            Title = "Blog Page Header"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blog yazılarının listelendiği ana içerik alanı",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Blog İçeriği",
                            SectionId = 5,
                            Status = 1,
                            Title = "Blog Yazıları Listesi"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Main content area where blog posts are listed",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Blog Content",
                            SectionId = 5,
                            Status = 1,
                            Title = "Blog Posts List"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tüm ürünlerin kategorize edilmiş şekilde listelendiği alan",
                            IsDeleted = false,
                            LanguageId = 1,
                            Name = "Ürün Kataloğu",
                            SectionId = 6,
                            Status = 1,
                            Title = "Ürün Katalog Listesi"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Area where all products are listed in a categorized manner",
                            IsDeleted = false,
                            LanguageId = 2,
                            Name = "Product Catalog",
                            SectionId = 6,
                            Status = 1,
                            Title = "Product Catalog List"
                        });
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Content", "Content")
                        .WithMany("Pages")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Content");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithOne("PageSEOParameter")
                        .HasForeignKey("PazarAtlasi.CMS.Domain.Entities.Content.PageSEOParameter", "PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.PageTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithMany("PageTranslations")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Page", "Page")
                        .WithMany("Sections")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany("SectionItems")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItemTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", "SectionItem")
                        .WithMany("Translations")
                        .HasForeignKey("SectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SectionItem");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionTranslation", b =>
                {
                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PazarAtlasi.CMS.Domain.Entities.Content.Section", "Section")
                        .WithMany("Translations")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Content", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Page", b =>
                {
                    b.Navigation("PageSEOParameter")
                        .IsRequired();

                    b.Navigation("PageTranslations");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.Section", b =>
                {
                    b.Navigation("SectionItems");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("PazarAtlasi.CMS.Domain.Entities.Content.SectionItem", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
