@model PazarAtlasi.CMS.Models.ViewModels.PageDetailsViewModel
@{
    ViewData["Title"] = $"Page Details - {Model.Name}";
}

<div class="page-details">
    <!-- Header -->
    <div class="flex flex-wrap items-center mb-8">
        <div class="w-full lg:w-2/3 mb-4 lg:mb-0">
            <div class="page-title-box">
                <div class="flex items-center mb-2">
                    <a href="@Url.Action("Pages", "Content")" 
                       class="text-purple-600 hover:text-purple-800 mr-3">
                        <i class="fas fa-arrow-left"></i>
                    </a>
                    <h4 class="text-2xl font-bold text-slate-800 relative inline-block after:content-[''] after:absolute after:bottom-[-8px] after:left-0 after:w-10 after:h-[3px] after:bg-purple-800 after:rounded-full">
                        @Model.Name
                    </h4>
                    @{
                        var css = "";
                        switch (Model.Status)
                        {
                            case PazarAtlasi.CMS.Domain.Common.Status.Active:
                                css = "bg-green-100 text-green-800";
                                break;
                            case PazarAtlasi.CMS.Domain.Common.Status.Pending:
                                css = "bg-blue-100 text-blue-800";
                                break;
                            case PazarAtlasi.CMS.Domain.Common.Status.Draft:
                                css = "bg-yellow-100 text-yellow-800";
                                break;
                            case PazarAtlasi.CMS.Domain.Common.Status.Archived:
                                css = "bg-gray-100 text-gray-800";
                                break;
                            default:
                                css = "bg-red-100 text-red-800";
                                break;
                        }

                        <span class="ml-4 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(css)">
                            @Model.Status.ToString()
                        </span>
                    }
                </div>
                <p class="text-slate-500 mt-3 max-w-xl">
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        @Model.Description
                    }
                    else
                    {
                        <span>Page code: /@Model.Code | Type: @Model.PageType.ToString()</span>
                    }
                </p>
            </div>
        </div>
        <div class="w-full lg:w-1/3 text-left lg:text-right">
            <div class="inline-flex items-center space-x-2">
                <a href="@Url.Action("PageEdit", "Content", new { id = Model.Id })" class="py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm transition-colors inline-flex items-center shadow-sm">
                    <i class="fas fa-edit mr-2"></i> Edit Page
                </a>
                <button class="py-2 px-4 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors inline-flex items-center shadow-sm">
                    <i class="fas fa-external-link-alt mr-2"></i> Preview
                </button>
            </div>
        </div>
    </div>

    <!-- Page Info Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-blue-100 rounded-full">
                    <i class="fas fa-info-circle text-blue-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Page Type</p>
                    <p class="text-lg font-bold text-slate-800">@Model.PageType.ToString()</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-purple-100 rounded-full">
                    <i class="fas fa-layer-group text-purple-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Sections</p>
                    <p class="text-lg font-bold text-slate-800">@Model.Sections.Count</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-green-100 rounded-full">
                    <i class="fas fa-language text-green-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Translations</p>
                    <p class="text-lg font-bold text-slate-800">@Model.Translations.Count</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-yellow-100 rounded-full">
                    <i class="fas fa-calendar text-yellow-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Created</p>
                    <p class="text-lg font-bold text-slate-800">@Model.CreatedAt.ToString("dd/MM/yyyy")</p>
                </div>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Sidebar -->
        <div class="space-y-6 lg:sticky lg:top-6 lg:self-start">
            <!-- Page Translations -->
            <div class="bg-white rounded-xl shadow-md">
                <div class="p-6 border-b border-slate-100">
                    <h5 class="text-lg font-semibold text-slate-800 flex items-center">
                        <i class="fas fa-language mr-2 text-purple-600"></i>
                        Translations
                    </h5>
                </div>
                <div class="p-6">
                    @if (Model.Translations.Any())
                    {
                        <div class="space-y-3">
                            @foreach (var translation in Model.Translations)
                            {
                                <div class="flex items-center p-3 bg-slate-50 rounded-lg">
                                    <div class="flex-shrink-0 w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                                        <span class="text-xs font-medium text-blue-600">@translation.LanguageCode</span>
                                    </div>
                                    <div class="ml-3 flex-1">
                                        <p class="text-sm font-medium text-slate-800">@translation.LanguageName</p>
                                        <p class="text-xs text-slate-500 truncate">@translation.Value</p>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4 text-slate-400">
                            <i class="fas fa-language text-2xl mb-2"></i>
                            <p class="text-sm">No translations available</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Page Information -->
            <div class="bg-white rounded-xl shadow-md">
                <div class="p-6 border-b border-slate-100">
                    <h5 class="text-lg font-semibold text-slate-800 flex items-center">
                        <i class="fas fa-info-circle mr-2 text-purple-600"></i>
                        Page Information
                    </h5>
                </div>
                <div class="p-6 space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-1">Page ID</label>
                        <p class="text-sm text-slate-600">#@Model.Id</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-1">Page Code</label>
                        <p class="text-sm text-slate-600 font-mono bg-slate-50 px-2 py-1 rounded">/@Model.Code</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-1">Created At</label>
                        <p class="text-sm text-slate-600">@Model.CreatedAt.ToString("dd MMMM yyyy, HH:mm")</p>
                    </div>
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <div>
                            <label class="block text-sm font-medium text-slate-700 mb-1">Last Updated</label>
                            <p class="text-sm text-slate-600">@Model.UpdatedAt.Value.ToString("dd MMMM yyyy, HH:mm")</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="bg-white rounded-xl shadow-md">
                <div class="p-6 border-b border-slate-100">
                    <h5 class="text-lg font-semibold text-slate-800 flex items-center">
                        <i class="fas fa-bolt mr-2 text-purple-600"></i>
                        Quick Actions
                    </h5>
                </div>
                <div class="p-6 space-y-3">
                    <a href="@Url.Action("PageEdit", "Content", new { id = Model.Id })" class="w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-edit mr-2"></i> Edit Content
                    </a>
                    <button class="w-full py-2 px-4 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-plus mr-2"></i> Add Section
                    </button>
                    <button class="w-full py-2 px-4 bg-purple-600 hover:bg-purple-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-language mr-2"></i> Manage Translations
                    </button>
                    <button class="w-full py-2 px-4 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-search mr-2"></i> SEO Settings
                    </button>
                    <hr class="my-3">
                    <button class="w-full py-2 px-4 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center"
                            onclick="confirmDelete(@Model.Id, '@Model.Name')">
                        <i class="fas fa-trash mr-2"></i> Delete Page
                    </button>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-6">
            <!-- SEO Parameters -->
            @if (Model.SEOParameter != null)
            {
                <div class="bg-white rounded-xl shadow-md">
                    <div class="p-6 border-b border-slate-100">
                        <h5 class="text-lg font-semibold text-slate-800 flex items-center">
                            <i class="fas fa-search mr-2 text-purple-600"></i>
                            SEO Parameters
                        </h5>
                    </div>
                    <div class="p-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-slate-700 mb-1">Meta Title</label>
                                <p class="text-sm text-slate-600 bg-slate-50 p-2 rounded">@Model.SEOParameter.MetaTitle</p>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-slate-700 mb-1">Author</label>
                                <p class="text-sm text-slate-600 bg-slate-50 p-2 rounded">@Model.SEOParameter.Author</p>
                            </div>
                            <div class="md:col-span-2">
                                <label class="block text-sm font-medium text-slate-700 mb-1">Meta Description</label>
                                <p class="text-sm text-slate-600 bg-slate-50 p-2 rounded">@Model.SEOParameter.MetaDescription</p>
                            </div>
                            <div class="md:col-span-2">
                                <label class="block text-sm font-medium text-slate-700 mb-1">Meta Keywords</label>
                                <p class="text-sm text-slate-600 bg-slate-50 p-2 rounded">@Model.SEOParameter.MetaKeywords</p>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.SEOParameter.CanonicalURL))
                            {
                                <div class="md:col-span-2">
                                    <label class="block text-sm font-medium text-slate-700 mb-1">Canonical URL</label>
                                    <p class="text-sm text-slate-600 bg-slate-50 p-2 rounded">@Model.SEOParameter.CanonicalURL</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Sections -->
            <div class="bg-white rounded-xl shadow-md">
                <div class="p-6 border-b border-slate-100">
                    <h5 class="text-lg font-semibold text-slate-800 flex items-center">
                        <i class="fas fa-layer-group mr-2 text-purple-600"></i>
                        Page Sections (@Model.Sections.Count)
                    </h5>
                </div>
                <div class="p-6">
                    @if (Model.Sections.Any())
                    {
                        <div class="space-y-4">
                            @foreach (var sectionDetail in Model.Sections.OrderBy(s => s.SortOrder))
                            {
                                <div class="border border-slate-200 rounded-lg p-4 hover:border-purple-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <span class="inline-flex items-center justify-center w-8 h-8 bg-purple-100 text-purple-600 rounded-full text-sm font-medium mr-3">
                                                @sectionDetail.SortOrder
                                            </span>
                                            <div>
                                                <p class="text-sm text-slate-500">@sectionDetail.Type.ToString() - @sectionDetail.SectionTemplateType.ToString()</p>
                                            </div>
                                        </div>
                                        @{
                                            var sectionCss = "";
                                            switch (sectionDetail.Status)
                                            {
                                                case PazarAtlasi.CMS.Domain.Common.Status.Active:
                                                    sectionCss = "bg-green-100 text-green-800";
                                                    break;
                                                case PazarAtlasi.CMS.Domain.Common.Status.Pending:
                                                    sectionCss = "bg-blue-100 text-blue-800";
                                                    break;
                                                case PazarAtlasi.CMS.Domain.Common.Status.Draft:
                                                    sectionCss = "bg-yellow-100 text-yellow-800";
                                                    break;
                                                case PazarAtlasi.CMS.Domain.Common.Status.Archived:
                                                    sectionCss = "bg-gray-100 text-gray-800";
                                                    break;
                                                default:
                                                    sectionCss = "bg-red-100 text-red-800";
                                                    break;
                                            }

                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(sectionCss)">
                                                @sectionDetail.Status.ToString()
                                            </span>
                                        }
                                    </div>

                                    @if (sectionDetail.SectionItems.Any())
                                    {
                                        <div class="mt-3 pt-3 border-t border-slate-100">
                                            <p class="text-sm font-medium text-slate-700 mb-2">Section Items (@sectionDetail.SectionItems.Count)</p>
                                            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
                                                @foreach (var item in sectionDetail.SectionItems.OrderBy(si => si.SortOrder))
                                                {
                                                    <div class="flex items-center p-2 bg-slate-50 rounded text-sm">
                                                        <span class="w-6 h-6 bg-slate-200 rounded-full flex items-center justify-center text-xs mr-2">
                                                            @item.SortOrder
                                                        </span>
                                                        <div class="flex-1">
                                                            <span class="text-slate-500 ml-2">(@item.Type.ToString())</span>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-8 text-slate-400">
                            <i class="fas fa-layer-group text-4xl mb-4"></i>
                            <p class="text-lg font-medium">No sections found</p>
                            <p class="text-sm">This page doesn't have any sections yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmDelete(pageId, pageName) {
        if (confirm(`Are you sure you want to delete the page "${pageName}"? This action cannot be undone.`)) {
            // Here you would make an AJAX call to delete the page
            console.log('Delete page with ID:', pageId);
            // Redirect to pages list after deletion
            window.location.href = '@Url.Action("Pages", "Content")';
        }
    }
</script>