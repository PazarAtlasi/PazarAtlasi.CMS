@model PazarAtlasi.CMS.Application.Dtos.TemplateUpdateDto
@{
    ViewData["Title"] = "Edit Template";
    var languages = ViewBag.Languages as List<LanguageViewModel>;
    var templateTypes = ViewBag.TemplateTypes as PazarAtlasi.CMS.Domain.Common.TemplateType[];
}

<div class="template-edit">
    <div class="flex flex-wrap items-center mb-8">
        <div class="w-full lg:w-2/3 mb-4 lg:mb-0">
            <div class="page-title-box">
                <h4
                    class="text-2xl font-bold text-slate-800 relative inline-block after:content-[''] after:absolute after:bottom-[-8px] after:left-0 after:w-10 after:h-[3px] after:bg-purple-800 after:rounded-full">
                    Edit Template
                </h4>
                <p class="text-slate-500 mt-3 max-w-xl">
                    Update template settings and translations.
                </p>
            </div>
        </div>
        <div class="w-full lg:w-1/3 text-left lg:text-right">
            <div class="inline-flex items-center space-x-2">
                <a href="@Url.Action("Template")"
                    class="py-2 px-4 bg-slate-600 hover:bg-slate-700 text-white rounded-lg text-sm transition-colors inline-flex items-center shadow-sm">
                    <i class="fas fa-arrow-left mr-2"></i> Back to Templates
                </a>
            </div>
        </div>
    </div>

    <form asp-action="TemplateEdit" method="post" class="space-y-8">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)

        <!-- Template Basic Information -->
        <div class="bg-white rounded-xl shadow-md p-6">
            <h5 class="text-lg font-semibold text-slate-800 mb-6">Basic Information</h5>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="TemplateType" class="block text-sm font-medium text-slate-700 mb-2">Template
                        Type</label>
                    <select asp-for="TemplateType"
                        class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                        @foreach (var type in templateTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                    <span asp-validation-for="TemplateType" class="text-red-500 text-sm"></span>
                </div>

                <div>
                    <label asp-for="TemplateKey" class="block text-sm font-medium text-slate-700 mb-2">Template
                        Key</label>
                    <input asp-for="TemplateKey"
                        class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                        placeholder="e.g., navbar-simple" />
                    <span asp-validation-for="TemplateKey" class="text-red-500 text-sm"></span>
                </div>

                <div>
                    <label asp-for="SortOrder" class="block text-sm font-medium text-slate-700 mb-2">Sort Order</label>
                    <input asp-for="SortOrder" type="number"
                        class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" />
                    <span asp-validation-for="SortOrder" class="text-red-500 text-sm"></span>
                </div>

                <div class="flex items-center">
                    <div class="flex items-center">
                        <input asp-for="IsActive" type="checkbox"
                            class="h-4 w-4 text-purple-600 focus:ring-purple-500 border-slate-300 rounded" />
                        <label asp-for="IsActive" class="ml-2 block text-sm text-slate-700">Active</label>
                    </div>
                </div>
            </div>

            <div class="mt-6">
                <label asp-for="ConfigurationSchema" class="block text-sm font-medium text-slate-700 mb-2">Configuration
                    Schema (JSON)</label>
                <textarea asp-for="ConfigurationSchema" rows="6"
                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent font-mono text-sm"
                    placeholder="Enter JSON configuration schema..."></textarea>
                <span asp-validation-for="ConfigurationSchema" class="text-red-500 text-sm"></span>
            </div>
        </div>

        <!-- Translations -->
        <div class="bg-white rounded-xl shadow-md p-6">
            <h5 class="text-lg font-semibold text-slate-800 mb-6">Translations</h5>

            <div id="translations-container">
                @for (int i = 0; i < Model.Translations.Count; i++)
                {
                    <div class="translation-item border border-slate-200 rounded-lg p-4 mb-4">
                        <div class="flex items-center justify-between mb-4">
                            <h6 class="text-md font-medium text-slate-700">Translation @(i + 1)</h6>
                            <button type="button" class="remove-translation text-red-600 hover:text-red-800">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-slate-700 mb-2">Language</label>
                                <select name="Translations[@i].LanguageId"
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                                    <option value="">Select Language</option>
                                    @foreach (var language in languages)
                                    {
                                        <option value="@language.Id"
                                            selected="@(Model.Translations[i].LanguageId == language.Id)">@language.Name
                                            (@language.Code)</option>
                                    }
                                </select>
                                @Html.HiddenFor(m => m.Translations[i].Id)
                                @Html.HiddenFor(m => m.Translations[i].TemplateId)
                            </div>

                            <div>
                                <label class="block text-sm font-medium text-slate-700 mb-2">Name</label>
                                <input name="Translations[@i].Name" value="@Model.Translations[i].Name"
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                    placeholder="Template name" />
                            </div>

                            <div>
                                <label class="block text-sm font-medium text-slate-700 mb-2">Description</label>
                                <input name="Translations[@i].Description" value="@Model.Translations[i].Description"
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                                    placeholder="Template description" />
                            </div>
                        </div>
                    </div>
                }
            </div>

            <button type="button" id="add-translation"
                class="w-full py-2 px-4 border-2 border-dashed border-slate-300 rounded-lg text-slate-600 hover:border-purple-400 hover:text-purple-600 transition-colors">
                <i class="fas fa-plus mr-2"></i> Add Translation
            </button>
        </div>

        <!-- Action Buttons -->
        <div class="flex items-center justify-end space-x-4">
            <a href="@Url.Action("Template")"
                class="py-2 px-6 bg-slate-600 hover:bg-slate-700 text-white rounded-lg transition-colors">
                Cancel
            </a>
            <button type="submit"
                class="py-2 px-6 bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors">
                <i class="fas fa-save mr-2"></i> Save Changes
            </button>
        </div>
    </form>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="fixed top-4 right-4 z-50">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg">
            <div class="flex items-center">
                <i class="fas fa-check-circle mr-2"></i>
                @TempData["SuccessMessage"]
            </div>
        </div>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="fixed top-4 right-4 z-50">
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg shadow-lg">
            <div class="flex items-center">
                <i class="fas fa-exclamation-circle mr-2"></i>
                @TempData["ErrorMessage"]
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        let translationIndex = @Model.Translations.Count;
        const languages = @Html.Raw(Json.Serialize(languages.Select(l => new { Id = l.Id, Name = l.Name, Code = l.Code })));

        // Add translation
        document.getElementById('add-translation').addEventListener('click', function () {
            const container = document.getElementById('translations-container');
            const translationHtml = `
            <div class="translation-item border border-slate-200 rounded-lg p-4 mb-4">
                <div class="flex items-center justify-between mb-4">
                    <h6 class="text-md font-medium text-slate-700">Translation ${translationIndex + 1}</h6>
                    <button type="button" class="remove-translation text-red-600 hover:text-red-800">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-2">Language</label>
                        <select name="Translations[${translationIndex}].LanguageId" class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            <option value="">Select Language</option>
                            ${languages.map(lang => `<option value="${lang.Id}">${lang.Name} (${lang.Code})</option>`).join('')}
                        </select>
                        <input type="hidden" name="Translations[${translationIndex}].Id" value="0" />
                        <input type="hidden" name="Translations[${translationIndex}].TemplateId" value="@Model.Id" />
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-2">Name</label>
                        <input name="Translations[${translationIndex}].Name" class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Template name" />
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-slate-700 mb-2">Description</label>
                        <input name="Translations[${translationIndex}].Description" class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Template description" />
                    </div>
                </div>
            </div>
        `;

            container.insertAdjacentHTML('beforeend', translationHtml);
            translationIndex++;
        });

        // Remove translation
        document.addEventListener('click', function (e) {
            if (e.target.closest('.remove-translation')) {
                e.target.closest('.translation-item').remove();
            }
        });
    });
</script>
