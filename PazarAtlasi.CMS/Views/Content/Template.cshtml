@model List<PazarAtlasi.CMS.Application.Dtos.TemplateDto>
@{
    ViewData["Title"] = "Template Management";
}

<div class="template-management">
    <div class="flex flex-wrap items-center mb-8">
        <div class="w-full lg:w-2/3 mb-4 lg:mb-0">
            <div class="page-title-box">
                <h4 class="text-2xl font-bold text-slate-800 inline-block after:content-[''] after:absolute after:bottom-[-8px] after:left-0 after:w-10 after:h-[3px] after:bg-purple-800 after:rounded-full">
                    Template Management
                </h4>
                <p class="text-slate-500 mt-3 max-w-xl">
                    Manage your website templates, view details and monitor their status.
                </p>
            </div>
        </div>
        <div class="w-full lg:w-1/3 text-left lg:text-right">
            <div class="inline-flex items-center space-x-2">
                <a href="@Url.Action("TemplateCreate", "Content")" class="py-2 px-4 bg-purple-800 hover:bg-purple-700 text-white rounded-lg text-sm transition-colors inline-flex items-center shadow-sm">
                    <i class="fas fa-plus mr-2"></i> Create Template
                </a>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-blue-100 rounded-full">
                    <i class="fas fa-layer-group text-blue-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Total Templates</p>
                    <p class="text-2xl font-bold text-slate-800">@Model.Count</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-green-100 rounded-full">
                    <i class="fas fa-check-circle text-green-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Active Templates</p>
                    <p class="text-2xl font-bold text-slate-800">@Model.Count(t => t.IsActive)</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-yellow-100 rounded-full">
                    <i class="fas fa-pause-circle text-yellow-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Inactive Templates</p>
                    <p class="text-2xl font-bold text-slate-800">@Model.Count(t => !t.IsActive)</p>
                </div>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex items-center">
                <div class="p-3 bg-purple-100 rounded-full">
                    <i class="fas fa-language text-purple-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-slate-600">Languages</p>
                    <p class="text-2xl font-bold text-slate-800">@Model.SelectMany(t => t.Translations).Select(tt => tt.LanguageId).Distinct().Count()</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Templates Table -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden">
        <div class="px-6 py-4 border-b border-slate-200">
            <div class="flex items-center justify-between">
                <h5 class="text-lg font-semibold text-slate-800">All Templates</h5>
                <div class="flex items-center space-x-2">
                    <div class="relative">
                        <input type="text" placeholder="Search templates..." 
                               class="pl-10 pr-4 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400"></i>
                    </div>
                    <select class="px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                        <option value="">All Status</option>
                        <option value="Active">Active</option>
                        <option value="Inactive">Inactive</option>
                    </select>
                </div>
            </div>
        </div>
        
        @if (Model.Any())
        {
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-slate-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Template</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Key</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Section Types</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Translations</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-slate-200">
                        @foreach (var template in Model)
                        {
                            <tr class="hover:bg-slate-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-10 w-10">
                                            <div class="h-10 w-10 rounded-full bg-purple-100 flex items-center justify-center">
                                                <i class="fas fa-layer-group text-purple-600"></i>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-slate-900">
                                                @(template.Translations.FirstOrDefault()?.Name ?? "No Name")
                                            </div>
                                            <div class="text-sm text-slate-500">
                                                @(template.Translations.FirstOrDefault()?.Description ?? "No Description")
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-slate-900">
                                    <div class="font-mono text-purple-600">@template.TemplateKey</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex flex-wrap gap-1">
                                        @if (template.SectionTypes.Any())
                                        {
                                            @foreach (var sectionType in template.SectionTypes.Take(2))
                                            {
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    @sectionType.ToString()
                                                </span>
                                            }
                                            @if (template.SectionTypes.Count > 2)
                                            {
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-200 text-blue-600">
                                                    +@(template.SectionTypes.Count - 2)
                                                </span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600">
                                                No sections
                                            </span>
                                        }
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex flex-wrap gap-1">
                                        @foreach (var translation in template.Translations.Take(3))
                                        {
                                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-slate-100 text-slate-800">
                                                @translation.LanguageCode
                                            </span>
                                        }
                                        @if (template.Translations.Count > 3)
                                        {
                                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-slate-200 text-slate-600">
                                                +@(template.Translations.Count - 3)
                                            </span>
                                        }
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (template.IsActive)
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            <i class="fas fa-times-circle mr-1"></i>
                                            Inactive
                                        </span>
                                    }
                                </td>

                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex items-center space-x-2">
                                        <a href="@Url.Action("TemplateEdit", new { id = template.Id })" 
                                           class="text-purple-600 hover:text-purple-900 transition-colors">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="mx-auto h-12 w-12 text-slate-400">
                    <i class="fas fa-layer-group text-4xl"></i>
                </div>
                <h3 class="mt-2 text-sm font-medium text-slate-900">No templates found</h3>
                <p class="mt-1 text-sm text-slate-500">Get started by creating a new template.</p>
                <div class="mt-6">
                    <a href="@Url.Action("TemplateCreate", "Content")" 
                       class="inline-flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium rounded-lg transition-colors shadow-sm">
                        <i class="fas fa-plus mr-2"></i>
                        Create Your First Template
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="fixed top-4 right-4 z-50">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg">
            <div class="flex items-center">
                <i class="fas fa-check-circle mr-2"></i>
                @TempData["SuccessMessage"]
            </div>
        </div>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="fixed top-4 right-4 z-50">
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg shadow-lg">
            <div class="flex items-center">
                <i class="fas fa-exclamation-circle mr-2"></i>
                @TempData["ErrorMessage"]
            </div>
        </div>
    </div>
}

<script>
    // Search and filter functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('input[placeholder="Search templates..."]');
        const statusFilter = document.querySelector('select');
        
        function filterTable() {
            const searchTerm = searchInput.value.toLowerCase();
            const statusFilter = document.querySelector('select').value;
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const templateInfo = row.querySelector('td:first-child').textContent.toLowerCase();
                const templateKey = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                const status = row.querySelector('td:nth-child(5) span').textContent.trim();
                
                const matchesSearch = templateInfo.includes(searchTerm) || templateKey.includes(searchTerm);
                const matchesStatus = !statusFilter || status === statusFilter;
                
                row.style.display = matchesSearch && matchesStatus ? '' : 'none';
            });
        }
        
        if (searchInput) {
            searchInput.addEventListener('input', filterTable);
        }
        
        if (statusFilter) {
            statusFilter.addEventListener('change', filterTable);
        }
    });

    // Auto-hide success/error messages
    setTimeout(function() {
        const messages = document.querySelectorAll('.fixed.top-4.right-4');
        messages.forEach(function(message) {
            message.style.opacity = '0';
            setTimeout(function() {
                message.remove();
            }, 300);
        });
    }, 5000);
</script>
