@model PazarAtlasi.CMS.Models.ViewModels.PageEditViewModel

<!-- Page Settings -->
<div class="bg-white rounded-xl shadow-md top-4">
    <div class="p-6 border-b border-slate-100">
        <h5 class="text-lg font-semibold text-slate-800 flex items-center">
            <i class="fas fa-cog mr-2 text-purple-600"></i>
            Page Settings
        </h5>
    </div>
    <div class="p-6 space-y-4">
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Page Name *</label>
            <input type="text" name="Name" value="@Model.Name" required
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400"
                placeholder="Enter page name" />
            <span asp-validation-for="Name" class="text-red-500 text-xs"></span>
        </div>

        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Page Code *</label>
            <input type="text" name="Code" value="@Model.Code" required
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400"
                placeholder="page-code" />
            <span asp-validation-for="Code" class="text-red-500 text-xs"></span>
            <p class="text-xs text-slate-500 mt-1">Used in URL. Use lowercase letters, numbers, and hyphens only.</p>
        </div>

        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Page Type</label>
            <select name="PageType" id="pageTypeSelect" onchange="handlePageTypeChange(this.value)"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                @foreach (var pageType in Enum.GetValues<PazarAtlasi.CMS.Domain.Common.PageType>())
                {
                    @if (Model.PageType == pageType)
                    {
                        <option value="@pageType" selected>@pageType.ToString()</option>
                    }
                    else
                    {
                        <option value="@pageType">@pageType.ToString()</option>
                    }
                }
            </select>
        </div>

        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Parent Page</label>
            <select name="ParentPageId" id="parentPageSelect"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                <option value="">No Parent (Root Page)</option>
                @if (Model.AvailableParentPages != null)
                {
                    @foreach (var parentPage in Model.AvailableParentPages)
                    {
                        @if (Model.ParentPageId == parentPage.Id)
                        {
                            <option value="@parentPage.Id" selected>@parentPage.DisplayName</option>
                        }
                        else
                        {
                            <option value="@parentPage.Id">@parentPage.DisplayName</option>
                        }
                    }
                }
            </select>
            <p class="text-xs text-slate-500 mt-1">Choose a parent page to create hierarchical structure.</p>
            @if (!string.IsNullOrEmpty(Model.ParentPageName))
            {
                <p class="text-xs text-blue-600 mt-1">
                    <i class="fas fa-info-circle mr-1"></i>
                    Current parent: @Model.ParentPageName
                </p>
            }
        </div>

        <!-- Dynamic Content Selection -->
        <div id="dynamicContentSelection" class="hidden">
            <label class="block text-sm font-medium text-slate-700 mb-1">Select Content</label>
            <select name="LinkedContentId" id="linkedContentSelect"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                <option value="">Select content...</option>
            </select>
            <p class="text-xs text-slate-500 mt-1">Choose existing content of the selected type.</p>
        </div>

        <!-- Layout Selection -->
        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Page Layout</label>
            <select name="LayoutId" id="layoutSelect" onchange="handleLayoutChange(this.value)"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                <option value="">No Layout (Custom)</option>
                <!-- Layouts will be loaded dynamically -->
            </select>
            <p class="text-xs text-slate-500 mt-1">Choose a layout template with pre-defined sections like navbar and
                footer.</p>
        </div>

        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Status</label>
            <select name="Status"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400">
                @foreach (var status in Enum.GetValues<PazarAtlasi.CMS.Domain.Common.Status>())
                {
                    @if (Model.Status == status)
                    {
                        <option value="@status" selected>@status.ToString()</option>
                    }
                    else
                    {
                        <option value="@status">@status.ToString()</option>
                    }
                }
            </select>
        </div>

        <div>
            <label class="block text-sm font-medium text-slate-700 mb-1">Description</label>
            <textarea name="Description" rows="3"
                class="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-200 focus:border-purple-400"
                placeholder="Brief description of the page">@Model.Description</textarea>
        </div>

        <!-- Save Button for Mobile -->
        <div class="lg:hidden pt-4 border-t border-slate-200">
            <button type="submit"
                class="w-full py-2 px-4 bg-purple-600 hover:bg-purple-700 text-white rounded-lg text-sm transition-colors inline-flex items-center justify-center">
                <i class="fas fa-save mr-2"></i> Save Changes
            </button>
        </div>
    </div>
</div>