@model PazarAtlasi.CMS.Models.ViewModels.SectionItemFormViewModel

@{
    ViewData["Title"] = Model.FormTitle;
}

<div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="bg-white shadow-sm rounded-lg border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center">
                    <i class="fas @(Model.IsEditMode ? "fa-edit" : "fa-plus") text-blue-600 mr-3 text-xl"></i>
                    <h1 class="text-2xl font-bold text-gray-900">@Model.FormTitle</h1>
                </div>
            </div>

            <div class="p-6">
                <!-- Error/Success Messages -->
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="mb-6 bg-red-50 border border-red-200 rounded-lg p-4 flex items-center">
                        <i class="fas fa-exclamation-circle text-red-600 mr-3"></i>
                        <span class="text-red-800">@Model.ErrorMessage</span>
                        <button type="button" class="ml-auto text-red-600 hover:text-red-800"
                                onclick="this.parentElement.style.display='none'">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="mb-6 bg-green-50 border border-green-200 rounded-lg p-4 flex items-center">
                        <i class="fas fa-check-circle text-green-600 mr-3"></i>
                        <span class="text-green-800">@Model.SuccessMessage</span>
                        <button type="button" class="ml-auto text-green-600 hover:text-green-800"
                                onclick="this.parentElement.style.display='none'">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                }

                <form asp-action="SectionItemForm" method="post" class="space-y-8">
                    @if (Model.IsEditMode)
                    {
                        <input type="hidden" asp-for="SectionItem.Id" />
                    }

                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <!-- Basic Information -->
                        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900">Basic Information</h3>
                            </div>
                            <div class="p-6 space-y-6">
                                <div>
                                    <label asp-for="SectionItem.Type" class="block text-sm font-medium text-gray-700 mb-2">
                                        Type <span class="text-red-500">*</span>
                                    </label>
                                    <select asp-for="SectionItem.Type"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                            asp-items="@(new SelectList(Model.SectionItemTypes))" required>
                                        <option value="">Select Type</option>
                                    </select>
                                    <span asp-validation-for="SectionItem.Type" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.MediaType" class="block text-sm font-medium text-gray-700 mb-2">
                                        Media Type <span class="text-red-500">*</span>
                                    </label>
                                    <select asp-for="SectionItem.MediaType"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                            asp-items="@(new SelectList(Model.MediaTypes))" required>
                                        <option value="">Select Media Type</option>
                                    </select>
                                    <span asp-validation-for="SectionItem.MediaType" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.TemplateId"
                                           class="block text-sm font-medium text-gray-700 mb-2">Template</label>
                                    <select asp-for="SectionItem.TemplateId"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                                        <option value="">No Template</option>
                                        @foreach (var template in Model.Templates)
                                        {
                                            <option value="@template.Id">
                                                @(template.Translations.FirstOrDefault()?.Name ?? template.TemplateKey)
                                            </option>
                                        }
                                    </select>
                                    <p class="mt-1 text-sm text-gray-500">Select a template to inherit field definitions</p>
                                    <span asp-validation-for="SectionItem.TemplateId" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.ParentSectionItemId"
                                           class="block text-sm font-medium text-gray-700 mb-2">Parent Section Item</label>
                                    <select asp-for="SectionItem.ParentSectionItemId"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                                        <option value="">No Parent (Root Item)</option>
                                        @foreach (var parentItem in Model.ParentSectionItems)
                                        {
                                            <option value="@parentItem.Id">
                                                @(parentItem.Translations.FirstOrDefault()?.Title ?? parentItem.Title ?? $"Item {parentItem.Id}")
                                            </option>
                                        }
                                    </select>
                                    <p class="mt-1 text-sm text-gray-500">Select a parent item to create a nested structure</p>
                                    <span asp-validation-for="SectionItem.ParentSectionItemId" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.SortOrder" class="block text-sm font-medium text-gray-700 mb-2">Sort Order</label>
                                    <input asp-for="SectionItem.SortOrder"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                           type="number" />
                                    <p class="mt-1 text-sm text-gray-500">Lower numbers appear first</p>
                                    <span asp-validation-for="SectionItem.SortOrder" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.Key" class="block text-sm font-medium text-gray-700 mb-2">Key</label>
                                    <input asp-for="SectionItem.Key"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="Unique key for this item" />
                                    <p class="mt-1 text-sm text-gray-500">Optional unique identifier</p>
                                    <span asp-validation-for="SectionItem.Key" class="text-red-600 text-sm"></span>
                                </div>

                                <div>
                                    <label asp-for="SectionItem.IconClass" class="block text-sm font-medium text-gray-700 mb-2">Icon Class</label>
                                    <input asp-for="SectionItem.IconClass"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="e.g., fas fa-home" />
                                    <p class="mt-1 text-sm text-gray-500">FontAwesome icon class (optional)</p>
                                    <span asp-validation-for="SectionItem.IconClass" class="text-red-600 text-sm"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Settings & Template Preview -->
                        <div class="space-y-6">
                            <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">Settings</h3>
                                </div>
                                <div class="p-6 space-y-6">
                                    <div class="flex items-start">
                                        <input asp-for="SectionItem.AllowReorder"
                                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1"
                                               type="checkbox" />
                                        <div class="ml-3">
                                            <label asp-for="SectionItem.AllowReorder" class="text-sm font-medium text-gray-700">
                                                Allow Reorder
                                            </label>
                                            <p class="text-sm text-gray-500">Allow this item to be reordered in the UI</p>
                                        </div>
                                    </div>

                                    <div class="flex items-start">
                                        <input asp-for="SectionItem.AllowRemove"
                                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1"
                                               type="checkbox" />
                                        <div class="ml-3">
                                            <label asp-for="SectionItem.AllowRemove" class="text-sm font-medium text-gray-700">
                                                Allow Remove
                                            </label>
                                            <p class="text-sm text-gray-500">Allow this item to be removed from the UI</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (Model.ShowTemplatePreview)
                            {
                                <!-- Template Preview -->
                                <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-medium text-gray-900">Template Preview</h3>
                                    </div>
                                    <div class="p-6">
                                        <div id="templatePreview" class="text-center py-4">
                                            <i class="fas fa-info-circle text-gray-400 text-2xl mb-2"></i>
                                            <p class="text-gray-500">Select a template to see its configuration</p>
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.ShowNestedStructure)
                            {
                                <!-- Nested Structure -->
                                <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                            <i class="fas fa-sitemap text-blue-600 mr-2"></i>
                                            Item Structure
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            @if (Model.ParentItem != null)
                                            {
                                                <!-- Parent Item -->
                                                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                                    <div class="flex items-center justify-between">
                                                        <div class="flex items-center">
                                                            <i class="fas fa-level-up-alt text-blue-600 mr-3"></i>
                                                            <div>
                                                                <h4 class="text-sm font-medium text-blue-900">Parent Item</h4>
                                                                <p class="text-sm text-blue-700">
                                                                    @(Model.ParentItem.Translations.FirstOrDefault()?.Title ?? Model.ParentItem.Title ?? $"Item {Model.ParentItem.Id}")
                                                                </p>
                                                                @if (!string.IsNullOrEmpty(Model.ParentItem.Description))
                                                                {
                                                                    <p class="text-xs text-blue-600 mt-1">@Model.ParentItem.Description</p>
                                                                }
                                                            </div>
                                                        </div>
                                                        <a href="@Url.Action("SectionItemForm", "Content", new { id = Model.ParentItem.Id })"
                                                           class="inline-flex items-center px-3 py-1.5 border border-blue-300 text-xs font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                                                            <i class="fas fa-edit mr-1"></i>
                                                            Edit Parent
                                                        </a>
                                                    </div>
                                                </div>
                                            }

                                            <!-- Current Item -->
                                            <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                                                <div class="flex items-center">
                                                    <i class="fas fa-dot-circle text-green-600 mr-3"></i>
                                                    <div>
                                                        <h4 class="text-sm font-medium text-green-900">Current Item</h4>
                                                        <p class="text-sm text-green-700">
                                                            @(Model.SectionItem.Translations.FirstOrDefault()?.Title ?? Model.SectionItem.Title ?? $"Item {Model.SectionItem.Id}")
                                                        </p>
                                                        @if (!string.IsNullOrEmpty(Model.SectionItem.Description))
                                                        {
                                                            <p class="text-xs text-green-600 mt-1">@Model.SectionItem.Description</p>
                                                        }
                                                    </div>
                                                </div>
                                            </div>

                                            @if (Model.ChildItems.Any())
                                            {
                                                <!-- Child Items -->
                                                <div class="bg-gray-50 border border-gray-200 rounded-lg p-4">
                                                    <div class="flex items-center justify-between mb-3">
                                                        <div class="flex items-center">
                                                            <i class="fas fa-level-down-alt text-gray-600 mr-3"></i>
                                                            <h4 class="text-sm font-medium text-gray-900">Child Items (@Model.ChildItems.Count)</h4>
                                                        </div>
                                                    </div>
                                                    <div class="space-y-2 max-h-64 overflow-y-auto">
                                                        @foreach (var childItem in Model.ChildItems)
                                                        {
                                                            <div class="bg-white border border-gray-200 rounded-md p-3 hover:bg-gray-50 transition-colors">
                                                                <div class="flex items-center justify-between">
                                                                    <div class="flex items-center">
                                                                        @if (!string.IsNullOrEmpty(childItem.IconClass))
                                                                        {
                                                                            <i class="@childItem.IconClass text-gray-500 mr-3"></i>
                                                                        }
                                                                        else
                                                                        {
                                                                            <i class="fas fa-cube text-gray-500 mr-3"></i>
                                                                        }
                                                                        <div>
                                                                            <p class="text-sm font-medium text-gray-900">
                                                                                @(childItem.Translations.FirstOrDefault()?.Title ?? childItem.Title ?? $"Item {childItem.Id}")
                                                                            </p>
                                                                            @if (!string.IsNullOrEmpty(childItem.Description))
                                                                            {
                                                                                <p class="text-xs text-gray-600">@childItem.Description</p>
                                                                            }
                                                                            <div class="flex items-center space-x-2 mt-1">
                                                                                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                                                                                    @childItem.Type
                                                                                </span>
                                                                                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-100 text-purple-800">
                                                                                    @childItem.MediaType
                                                                                </span>
                                                                                <span class="text-xs text-gray-500">Order: @childItem.SortOrder</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <a href="@Url.Action("SectionItemForm", "Content", new { id = childItem.Id })"
                                                                       class="inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                                                                        <i class="fas fa-edit mr-1"></i>
                                                                        Edit
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Translations -->
                    <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Translations</h3>
                        </div>
                        <div class="p-6">
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                @for (int i = 0; i < Model.SectionItem.Translations.Count; i++)
                                {
                                    var translation = Model.SectionItem.Translations[i];
                                    var language = Model.AvailableLanguages.FirstOrDefault(l => l.Id == translation.LanguageId);

                                    <div class="border border-gray-200 rounded-lg">
                                        <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
                                            <h4 class="text-sm font-medium text-gray-900 flex items-center">
                                                <i class="fas fa-language text-blue-600 mr-2"></i>
                                                @(language?.Name ?? "Unknown Language")
                                                <span class="ml-2 text-xs text-gray-500">(@(language?.Code ?? "N/A"))</span>
                                            </h4>
                                        </div>
                                        <div class="p-4 space-y-4">
                                            <input type="hidden" asp-for="SectionItem.Translations[i].Id" />
                                            <input type="hidden" asp-for="SectionItem.Translations[i].SectionItemId" />
                                            <input type="hidden" asp-for="SectionItem.Translations[i].LanguageId" />

                                            <div>
                                                <label asp-for="SectionItem.Translations[i].Title"
                                                       class="block text-sm font-medium text-gray-700 mb-2">Title</label>
                                                <input asp-for="SectionItem.Translations[i].Title"
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                                       placeholder="Enter title in @(language?.Name ?? "this language")" />
                                                <span asp-validation-for="SectionItem.Translations[i].Title"
                                                      class="text-red-600 text-sm"></span>
                                            </div>

                                            <div>
                                                <label asp-for="SectionItem.Translations[i].Description"
                                                       class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                                                <textarea asp-for="SectionItem.Translations[i].Description"
                                                          class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                                          rows="3"
                                                          placeholder="Enter description in @(language?.Name ?? "this language")"></textarea>
                                                <span asp-validation-for="SectionItem.Translations[i].Description"
                                                      class="text-red-600 text-sm"></span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    @if (Model.ShowFieldsSection)
                    {
                        <!-- Fields Section -->
                        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                                <h3 class="text-lg font-medium text-gray-900">Fields</h3>
                                <button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" onclick="addField()">
                                    <i class="fas fa-plus mr-2"></i>
                                    Add Field
                                </button>
                            </div>
                            <div class="p-6">
                                <div id="fieldsContainer" class="space-y-4">
                                    @for (int i = 0; i < Model.SectionItem.Fields.Count; i++)
                                    {
                                        ViewBag.Languages = Model.AvailableLanguages;
                                        ViewBag.FieldIndex = i;
                                        await Html.PartialAsync("_SectionItemDetailField.cshtml", Model.SectionItem.Fields[i]);
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    @if (Model.ShowFieldValuesSection)
                    {
                        <!-- Field Values Section -->
                        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900">Field Values</h3>
                            </div>
                            <div class="p-6">
                                <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                                    <table class="min-w-full divide-y divide-gray-300">
                                        <thead class="bg-gray-50">
                                            <tr>
                                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Field</th>
                                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value</th>
                                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Translations</th>
                                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody class="bg-white divide-y divide-gray-200">
                                            @for (int i = 0; i < Model.SectionItem.FieldValues.Count; i++)
                                            {
                                                var fieldValue = Model.SectionItem.FieldValues[i];
                                                var field = Model.SectionItem.Fields.FirstOrDefault(f => f.Id == fieldValue.SectionItemFieldId);

                                                <tr class="hover:bg-gray-50">
                                                    <td class="px-6 py-4 whitespace-nowrap">
                                                        <div class="text-sm font-medium text-gray-900">@(field?.FieldName ?? "Unknown Field")</div>
                                                        <div class="text-sm text-gray-500">@(field?.FieldKey ?? "N/A")</div>
                                                    </td>
                                                    <td class="px-6 py-4 whitespace-nowrap">
                                                        <input asp-for="SectionItem.FieldValues[i].Value" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                                                        <input type="hidden" asp-for="SectionItem.FieldValues[i].Id" />
                                                        <input type="hidden" asp-for="SectionItem.FieldValues[i].SectionId" />
                                                        <input type="hidden" asp-for="SectionItem.FieldValues[i].SectionItemId" />
                                                        <input type="hidden" asp-for="SectionItem.FieldValues[i].SectionItemFieldId" />
                                                    </td>
                                                    <td class="px-6 py-4 whitespace-nowrap">
                                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                            @fieldValue.Translations.Count translations
                                                        </span>
                                                    </td>
                                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                                        <button type="button" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" onclick="removeFieldValue(@i)">
                                                            <i class="fas fa-trash mr-1"></i>
                                                            Remove
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Form Actions -->
                    <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                        <div class="px-6 py-4">
                            <div class="flex justify-between">
                                <a href="@Url.Action("SectionItems", "Content")"
                                   class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    <i class="fas fa-arrow-left mr-2"></i>
                                    Back to List
                                </a>
                                <button type="submit"
                                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    <i class="fas fa-save mr-2"></i>
                                    @Model.SubmitButtonText
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Template selection change handler
            const templateSelect = document.getElementById('SectionItem_TemplateId');
            const previewDiv = document.getElementById('templatePreview');

            if (templateSelect && previewDiv) {
                templateSelect.addEventListener('change', function () {
                    const templateId = this.value;

                    if (templateId) {
                        previewDiv.innerHTML = `
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 flex items-center">
                                <i class="fas fa-info-circle text-blue-600 mr-3"></i>
                                <span class="text-blue-800">Template selected. Field definitions will be loaded after creation.</span>
                            </div>
                        `;
                    } else {
                        previewDiv.innerHTML = `
                            <div class="text-center py-4">
                                <i class="fas fa-info-circle text-gray-400 text-2xl mb-2"></i>
                                <p class="text-gray-500">Select a template to see its configuration</p>
                            </div>
                        `;
                    }
                });
            }

            // Form validation
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function (e) {
                    const type = document.getElementById('SectionItem_Type').value;
                    const mediaType = document.getElementById('SectionItem_MediaType').value;

                    if (!type || !mediaType) {
                        e.preventDefault();

                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'mb-6 bg-red-50 border border-red-200 rounded-lg p-4 flex items-center';
                        errorDiv.innerHTML = `
                            <i class="fas fa-exclamation-circle text-red-600 mr-3"></i>
                            <span class="text-red-800">Please select both Type and Media Type.</span>
                            <button type="button" class="ml-auto text-red-600 hover:text-red-800" onclick="this.parentElement.remove()">
                                <i class="fas fa-times"></i>
                            </button>
                        `;

                        const formContainer = form.parentElement;
                        formContainer.insertBefore(errorDiv, form);

                        return false;
                    }
                });
            }

            // Add smooth transitions to form elements
            const formElements = document.querySelectorAll('input, select, textarea');
            formElements.forEach(element => {
                element.addEventListener('focus', function () {
                    this.classList.add('ring-2', 'ring-blue-500', 'border-blue-500');
                });
                element.addEventListener('blur', function () {
                    this.classList.remove('ring-2', 'ring-blue-500', 'border-blue-500');
                });
            });
        });

        function addField() {
            console.log('Add field functionality would be implemented here');
        }

        function removeFieldValue(index) {
            console.log('Remove field value functionality would be implemented here for index:', index);
        }
    </script>
}